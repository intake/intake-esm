name: CI
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: '0 0 * * *' # Daily “At 00:00”
  workflow_dispatch: # allows you to trigger manually

jobs:
  build:
    name: python-${{ matrix.python-version }}
    if: github.repository == 'intake/intake-esm'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9']
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          mamba-version: '*'
          channel-priority: strict
          activate-environment: intake-esm-dev
          auto-update-conda: false
          python-version: ${{ matrix.python-version }}

      - name: Set up conda environment
        run: |
          mamba env update -f ci/environment.yml
          python -m pip install -e .
          conda list

      - name: Run Tests
        run: |
          python -m pytest -n auto --cov=./ --cov-report=xml --verbose

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false

  upstream-dev:
    name: upstream-dev
    if: github.repository == 'intake/intake-esm'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags.

      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          mamba-version: '*'
          channel-priority: strict
          activate-environment: intake-esm-dev
          auto-update-conda: false
          python-version: 3.8

      - name: Set environment variables
        run: |
          echo "XARRAY_BACKEND_API=v2" >> $GITHUB_ENV

      - name: Set up conda environment
        run: |
          mamba env update -f ci/environment-upstream-dev.yml
          python -m pip install -e .
          conda list

      - name: Run Tests
        run: |
          python -m pytest -n auto --cov=./ --cov-report=xml --verbose
