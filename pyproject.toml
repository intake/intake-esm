[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]

[project]
name = "intake-esm"
description = "An intake plugin for parsing an Earth System Model (ESM) catalog and loading netCDF files and/or Zarr stores into Xarray datasets."
readme = "README.md"
license = {text="Apache Software License 2.0"}
requires-python = ">=3.10"
maintainers = [
    { name = "NCAR XDev Team", email = "xdev@ucar.edu" },
]
keywords = [
    "catalog",
    "intake",
    "xarray",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]

dynamic = ["version", "dependencies"]

[tool.setuptools.dynamic]

dependencies = { file = ["requirements.txt"] }
optional-dependencies = { dev = { file = ["requirements-dev.txt"] } }

[project.entry-points."intake.drivers"]
esm_datasource = "intake_esm.source:ESMDataSource"
esm_datastore = "intake_esm.core:esm_datastore"

[project.urls]
Documentation = "https://intake-esm.readthedocs.io"
Homepage = "https://intake-esm.readthedocs.io"
Source = "https://github.com/intake/intake-esm"
Tracker = "https://github.com/intake/intake-esm/issues"


[tool.setuptools.packages.find]
include = ["intake_esm*"]

[tool.setuptools.package-data]
intake_esm = ["py.typed"]



[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "node-and-date"
fallback_version = "999"
write_to = "intake_esm/_version.py"
write_to_template = '__version__ = "{version}"'



[tool.ruff]
line-length = 100
target-version = "py310"
extend-include = ["*.ipynb"]


builtins = ["ellipsis"]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
[tool.ruff.lint]
per-file-ignores = {}
ignore = [
    "E721", # Comparing types instead of isinstance
    "E741", # Ambiguous variable names
    "E501", # Conflicts with ruff format
]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I",
    # Pyupgrade
    "UP",
]


[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.lint.isort]
known-first-party = ["intake_esm"]
combine-as-imports = true

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
console_output_style = "count"
addopts = "--cov=./ --cov-report=xml --verbose"
markers = "network: tests requiring a network connection"
